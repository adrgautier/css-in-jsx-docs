{"componentChunkName":"component---src-templates-post-template-js","path":"/docs/get-started/introduction","webpackCompilationHash":"804af034780a4ffcdd04","result":{"data":{"markdownRemark":{"fields":{"slug":"/docs/get-started/introduction"},"id":"593ec1bd-5ef9-5abe-911e-5aca81699d08","html":"<p>CSS-in-JSX (stylized &#x3C;><strong>CSS</strong>&#x3C;/> or &#x3C;><strong>CSS</strong> in <strong>JSX</strong>&#x3C;/>) is yet another approach to style in React.</p>\n<h2 id=\"disclaimer\"><a href=\"#disclaimer\" aria-label=\"disclaimer permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclaimer</h2>\n<p>⚠️ This is a proof of concept and should not be used on any production website. ⚠️</p>\n<h2 id=\"features\"><a href=\"#features\" aria-label=\"features permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features</h2>\n<ul>\n<li>Powered by JSX</li>\n<li>Style nesting</li>\n<li>Template literal free</li>\n<li>Hybrid syntax</li>\n</ul>\n<h2 id=\"motivations\"><a href=\"#motivations\" aria-label=\"motivations permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Motivations</h2>\n<p>As much as I find the styled-components powerful, I do not find it pleasing to write nor to read.</p>\n<p>Template litterals are especially a pain in the ass to write using AZERTY keyboard and this was the initial motivation behind the concept of CSS in JSX.</p>\n<p>I started to ask myself, how a frictionless syntax for CSS in JS would look like ?</p>\n<p>The idea of styles in JSX was a good place to start. For example, <a href=\"https://github.com/vercel/styled-jsx\">styled-jsx</a> showcases the benefits of not naming, neither the styles, nor the props used for interpolation.</p>\n<p>However the use of template litterals was a deal breaker for me. From there came the idea of using fragments to structure the CSS.</p>","frontmatter":{"date":null,"title":"Introduction","sidebar":"Docs","showTitle":true,"hideAnchor":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}